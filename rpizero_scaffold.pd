#N canvas 0 29 1366 739 12;
#X msg 47 125 \; pd dsp 1;
#X msg 128 125 \; pd dsp 0;
#X obj 45 642 dac~ 1 2;
#X obj 84 244 print TCP;
#X floatatom 170 244 5 0 0 0 - - -, f 5;
#X obj 45 213 netreceive 13000;
#X text 186 213 <-- open an instance of a network listener socket;
#X text 298 239 <-- optional: print data to console;
#X text 378 262 and list # of connections;
#X text 44 24 RPiZero Scaffolding;
#X obj 45 356 route 0 1;
#X floatatom 592 514 5 0 0 0 - - -, f 5;
#X floatatom 638 514 5 0 0 0 - - -, f 5;
#X text 43 179 receive control message over local network via TCP;
#X obj 47 94 loadbang;
#X text 361 350 <-- using local channel index \, route data;
#X text 473 372 towards proper dac~ channel;
#X text 892 434 <-- using algorithm index \, route data;
#X text 996 457 towards proper algorithm;
#X text 301 90 <-- Turn on Digital Signal Processing on load;
#X text 229 65 Since this patch is executed over SSH via commandline:
;
#X text 365 117 $ puredata -nogui rpizero_scaffold.pd;
#X obj 45 547 abstraction-scaffold;
#X obj 592 548 abstraction-scaffold;
#X obj 45 483 unpack f f;
#X obj 45 430 route 0 1 2;
#X obj 562 431 route 0 1 2;
#X floatatom 224 513 5 0 0 0 - - -, f 5;
#X floatatom 270 513 5 0 0 0 - - -, f 5;
#X obj 224 547 abstraction-scaffold;
#X obj 224 483 unpack f f;
#X obj 592 484 unpack f f;
#X connect 5 0 3 0;
#X connect 5 0 10 0;
#X connect 5 1 4 0;
#X connect 10 0 25 0;
#X connect 10 1 26 0;
#X connect 11 0 23 0;
#X connect 12 0 23 1;
#X connect 14 0 0 0;
#X connect 22 0 2 0;
#X connect 23 0 2 1;
#X connect 24 0 22 0;
#X connect 24 1 22 1;
#X connect 25 0 24 0;
#X connect 26 0 31 0;
#X connect 27 0 29 0;
#X connect 28 0 29 1;
#X connect 30 0 27 0;
#X connect 30 1 28 0;
#X connect 31 0 11 0;
#X connect 31 1 12 0;
